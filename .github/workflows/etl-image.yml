# .github/workflows/etl-image.yml
name: Build & Push ETL Image

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      etl: ${{ steps.filter.outputs.etl }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            etl:
              - 'apps/etl/**'
              - '.github/workflows/etl-image.yml'
              # - 'apps/shared/**'   # 공유 모듈 쓰면 추가

  build:
    needs: changes
    if: needs.changes.outputs.etl == 'true' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      # A) 같은 오너면 GITHUB_TOKEN으로 충분
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # B) (대안) 다른 오너/Org로 푸시 시 PAT 사용 → 위 스텝 대신 이걸 쓰세요
      # - name: Log in to GHCR (PAT)
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ secrets.GHCR_USERNAME }}
      #     password: ${{ secrets.GHCR_PAT }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/carbon-etl
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,format=long

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/etl/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APP_VERSION=${{ github.ref_name }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ github.event.repository.updated_at }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # platforms: linux/amd64
